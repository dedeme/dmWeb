// Copyright 28-Apr-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Servers page.
module server.pgs.settings.servers;

cgi = load es.dm.cgi;
json = load es.dm.json;
load es.dm.jsonM;
sync = load es.dm.sync;
load std;
nick = load data.nick;
nicksTb = load db.nicksTb;
serversTb = load db.serversTb;
server = load data.server;

{
  /// Request process.
  ///
  /// Arguments:
  ///   ck - Comunication key.
  ///   rq - Request.
  process ck rq
  is string -> hash<string, json.t> -> string =
    case cgi.rqString rq "rq" of
    "idata":
      rp = [:];
      sync.run do lk:
        rp["servers"] := serversTb.readJs lk;
        rp["nicks"] := jswList nick.toJs (nicksTb.nicks lk);
        done;
      cgi.rp ck rp;
    "new" :
      server = cgi.rqString rq "server";
      rp = [:];
      sync.run do lk:
        rp["ok"] := json.wb (serversTb.add lk server);
        done;
      cgi.rp ck rp;
    "modify" :
      server = server.fromJs rq["server"];
      rp = [:];
      sync.run do lk:
        rp["ok"] := json.wb (serversTb.modify lk server);
        done;
      cgi.rp ck rp;
    "del" :
      id = cgi.rqNumber rq "id";
      sync.run do lk:
        serversTb.del lk id
        done;
      cgi.rpEmpty ck;
    k:
      failedKey k
    esac,
}