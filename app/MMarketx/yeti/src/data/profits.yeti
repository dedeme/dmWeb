// Copyright 10-Jun-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Profits historic entry.
module data.profits;

json = load es.dm.json;

typedef rsT =
  { total is number,
    acc is number,
    risk is number
  };

typedef t =
  { date is string,
    rs is rsT
  };

(
  rsToJs rs =
    json.wa
      [ json.wn rs.total,
        json.wn rs.acc,
        json.wn rs.risk
      ];

  rsFromJs js =
    ( a = json.ra js |> array;
      { total = json.rn a[0],
        acc = json.rn a[1],
        risk = json.rn a[2]
      }
    );

{
  /// Create an entry
  ///
  /// Arguments:
  ///   date - Date in base format (YYYYMMDD)
  ///   total - Total profits.
  ///   acc - Accounting profits.
  ///   risk - Risk profits.
  mk date total acc risk
  is string -> number -> number -> number -> t =
    { date, rs = { total, acc, risk } },

  /// To JSON.
  ///
  /// Arguments:
  ///   e - entry.
  toJs e
  is t -> json.t =
    json.wa
      [ json.ws e.date,
        rsToJs e.rs
      ],

  /// From JSON.
  ///
  /// Arguments:
  ///   js - JSON value.
  fromJs js
  is json.t -> t =
    a = json.ra js |> array;
    { date = json.rs a[0],
      rs = rsFromJs a[1]
    },
})
