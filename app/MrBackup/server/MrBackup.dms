// Copyright 21-Dic-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Main.

"dm/cgi" import
"io/conf" import
"io/log" import
"scheduler" import
"server" import
"i18n" import

(i18n,_) : _ =>
/// @s::tx -> @s:tx
(i18n,__) : __ =>
/// @s::tx, @l::vars -> @s:tx

(@+s:: msg =
  msg log,error
  msg fail
@-) lfail =>
/// @s::msg -> @
///
/// Annotates 'msg' in log, send it to console and stop program.

"MrBackup" : appName =
/// @s
"201912" : dataVersion =
/// @s
3600 : expiration =
/// @i
appName : "\nData version: " : dataVersion : "\n" + + + : version =
/// @s
50203 : port =
/// @i

"Uninitialized" wrap,ref : ConfDb =
/// @r<s>
/// Path to 'conf.db'
"Uninitialized" wrap,ref : LogDb =
/// @r<s>
/// Path to 'log.db'

[
  "/home/deme/MrBackup",
  "/media/disk1/dm/MrBackup",
  "/media/deme/Elements SE/MrBackup"
] data : MrBackupTargets =
/// @l<s>
/// Pool list.

(
  "Usage: MrBackup [start | stop | test | help]":_ sys,println
) help. =>

(@+
  (fname = cgi,home fname path,+ file,mkdir) : mkdir =>

  appName sys,init
  sys,home expiration cgi,init

  sys,home "data" path,+ : dir =
  dir file,exists? !
  (
    dir file,mkdir

    dir "version.txt" path,+ : version : file,write

    "tmp" mkdir
    "trash" mkdir
    "backups" mkdir
  )
  if

  ConfDb : dir "conf.db" path,+ <<
  LogDb : dir "log.db" path,+ <<

  conf,init
  log,init

@-) init. =>

( @+s:: msg =
  ( "printf \"" msg "\" | nc -q 15 localhost " port toStr) ++ sys,cmd
  ( )
  ( "Fail sending 'end/test' message":_ sys,println; 0 sys,exit)
  wrap,option
@-s) send. =>

// Start -----------------------------------------------------------------------

init.
conf,lang i18n,init

( sys,args lst,size 1 !=)
( help.)
else
( sys,args !0 "start" ==)
(
  port iserver,open : Sv =

  (Sv server,start) sys,thread : Th =
  (scheduler,start) sys,freeThread

  Th sys,join
  scheduler,stop

  Sv iserver,close
)
else
( sys,args !0 "stop" ==)
( "end" send.; pop)
else
( sys,args !0 "test" ==)
(
  "test" send. : "Ok" : ==
  ( "MrBackup is running":_ sys,println)
  ( "MrBackup is stopped":_ sys,println)
  elif
)
else
( help.)
if
