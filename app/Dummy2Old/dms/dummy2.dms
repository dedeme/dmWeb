// Copyright 25-Sep-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

"dm/cgi" import
"conf" import
"pages/main" import
"pages/settings" import
"pages/chpass" import
"pages/backups" import

"Dummy2" appName =
"201909" dataVersion =
"dmcgi/Dummy2" appDir =
3600 expiration =
appName : "\nData version: " : dataVersion : "\n" + + + version =

( // () -> Void
  (fname = cgi,home fname path,+ file,mkdir)
  mkdir =>

  cgi,home "data" path,+
  dir =
  (
    dir file,mkdir

    dir "version.txt" path,+ version file,write

    "tmp" mkdir
    "trash" mkdir
    "backups" mkdir
  )
  (dir file,exists? !)
  if
) appInit =>

( Rq =; sessionId =

  ("Field 'page' is missing" fail) (Rq "page" obj,has? !) if
  Rq "page" obj,get js,rs : page =

  ( "Value '" page "' not allowed for 'page'" + + fail)
  else
  (Rq appName version backups,process)
  (page "Backups" ==)
  elif
  (Rq chpass,process)
  (page "Chpass" ==)
  elif
  (Rq settings,process)
  (page "Settings" ==)
  elif
  (
    sessionId cgi,delSession : rt =  // Dummy return
    Rq "rq" "logout" js,ws obj,put
    Rq "" "" backups, process  // Add automatic backup
    rt
  )
  (page "logout" ==)
  elif
  ( Rq main,process)
  (page "Main" ==)
  if
) process =>

// Start ---------------------------------------------------------------------

appDir expiration cgi,init
appInit
conf,init

sys,args 0 get rq =
rq ":" str,index ix =
(
  rq ix str,left : sessionId =
  rq ix 1 + str,right : crypData =

  ( "nosession" cgi,setKey; cgi,expired sys,print)
  ( Ss =
    Ss "key" obj,get js,rs : key =
    Ss "conId" obj,get js,rs : connectionId =

    key cgi,setKey
    crypData key cryp,decryp : js,ro : Rq =

    ( 0)
    else
    ( (1) else (0) (Rq "connectionId" obj,get : connectionId : ==) if)
    (Rq "connectionId" obj,has?)
    if

    ( sessionId Rq process sys,print)
    else
    ( "nosession" cgi,setKey; cgi,expired sys,print)
    ()
    if
  )
  (sessionId cgi,getSession)
  wrap,option
)
else //........................................................... NORMAL DATA
(
  appName cgi,klen cryp,key : key =
  key cgi,setKey
  rq 1 str,right key cryp,decryp : ":" : str,split : Fields =

  Fields 0 get : Fields 1 get : Fields 2 get "1" == : cgi,authentication
    sys,print
)
(ix 0 ==) //................................................... AUTHENTICATION
elif
(
  rq cgi,setKey
  rq cgi,connect sys,print
)
( ix -1 ==) //..................................................... CONNECTION
if


