// Copyright 25-Dic-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Directories page.

"../../dm/cgi" import
"../../io/bks" import
"../../io/log" import
"../../common/dirData" import

( @m :: Rq =
  Rq "rq" map,has? ! ("Field 'rq' is missing":_ lfail) if
  Rq .rq js,rs : rq =

  ( "idata" rq ==)
  ( {
      "poolsOk": bks,poolsOk? js,wb
      "dirs": bks,dirList (dirData,toJs) lst,toJs
    } map,from cgi,ok
  )
  else
  ( "execBackup" rq ==)
  (
    "MrBackup" file,tmp : tmp =
    tmp "" file,write

    (
      tmp
      {
        "ok": Rq .id js,rs bks,execBackup js,wb
      } map,from js,wo file,write
    ) sys,freeThread

    {
      "ftmp": tmp js,ws
    } map,from cgi,ok
  )
  else
  ( "execBackup2" rq ==)
  (
    Rq .tmp js,rs : tmp =
    tmp file,read : djs =
    djs "" ==
    ( cgi,none)
    (
      tmp file,del
      djs js,ro cgi,ok
    )
    elif
  )
  else
  ( "add" rq ==)
  (
    {
      "ok" : Rq .id js,rs bks,addDir js,wb
    } map,from cgi,ok
  )
  else
  ( "showDir" rq ==)
  (
    Rq .id js,rs bks,showDir
    cgi,none
  )
  else
  ( "modifyDir" rq ==)
  (
    {
      "ok" :
        Rq .oldId js,rs : Rq .newId js,rs : bks,modifyDir js,wb
    } map,from cgi,ok
  )
  else
  ( "delDir" rq ==)
  (
    {
      "ok": Rq .id js,rs bks,delDir js,wb
    } map,from cgi,ok
  )
  else
  ( "modifyPath" rq ==)
  (
    {
      "ok" :
        Rq .id js,rs : Rq .dpath js,rs : bks,modifyPath js,wb
    } map,from cgi,ok
  )
  else
  ( "delPath" rq ==)
  (
    {
      "ok": Rq .id js,rs bks,delPath js,wb
    } map,from cgi,ok
  )
  else
  ( "Value '%0' not allowed for 'rq'":_ [rq] __ lfail)
  if
@s) process =>
