// Copyright 08-Aug-2018 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Paths page.
module pages.paths;

load es.dm.std;
load es.dm.json;
{error} = load es.dm.exc;
cgi = load es.dm.cgi;

db = load data.db;
menuPath = load data.menuPath;

{
  process rq =
    case rstring rq["rq"] of
    "getPaths":
      cgi.ok ["paths": db.getPaths () |> wlist menuPath.toJson];
    "changeLang":
      db.changeLang ();
      cgi.okEmpty ();
    "changeShowAll":
      db.changeShowAll ();
      cgi.okEmpty ();
    "newPath":
      name = rstring rq["name"];
      path = rstring rq["path"];
      p = menuPath.mk name path true false;
      paths = p::(db.getPaths ());
      db.setPaths (wlist menuPath.toJson paths |> jsToStr);
      cgi.okEmpty ();
    "selPath":
      name = rstring rq["name"];
      show = rboolean rq["show"];
      db.getPaths () |>
        map (_ mp = if mp.id == name then mp with {show = show} else mp fi) |>
        wlist menuPath.toJson |>
        jsToStr |>
        db.setPaths;
      cgi.okEmpty ();
    "deletePath":
      name = rstring rq["name"];
      db.getPaths () |>
        filter (_ mp = mp.id != name) |>
        wlist menuPath.toJson |>
        jsToStr |>
        db.setPaths;
      cgi.okEmpty ();
    "modifyPath":
      oldName = rstring rq["oldName"];
      newName = rstring rq["newName"];
      path = rstring rq["path"];
      db.getPaths () |>
        map (_ mp = if mp.id == oldName
                     then mp with {id = newName, path = path}
                     else mp
                     fi) |>
        wlist menuPath.toJson |>
        jsToStr |>
        db.setPaths;
      cgi.okEmpty ();
    s: throw (error "Request '\(s)' is unknown in paths page.")
    esac,
}

as
{
  process is hash<string, json> -> cgi.rp
}
