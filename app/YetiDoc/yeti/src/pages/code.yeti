// Copyright 11-Aug-2018 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Code page.
module pages.code;

load es.dm.std;
load es.dm.buf;
load es.dm.json;
{readAll} = load es.dm.file;
cgi = load es.dm.cgi;
db = load data.db;
hlight = load data.hlight;

typedef txT = {
    bf is buf,
    s is string,
    ix is number
  };

(
  colorize tx = hlight.colorize tx;

  putHyper hyper tx =
    if hyper == "hp::" then tx
    else (
      h = (strRight hyper 4);
      case cindex "." h of
      None (): tx;
      Some i:
        hl = strLeft h i;
        hr = strRight h (i + 1);
        if hl == "~"
        then
          case sindex ("\n{") tx of
          None (): tx;
          Some i:
            case sindex' ("\n  " ^ hr ^ " ") i tx of
            None (): tx;
            Some i: strLeft tx i ^ ("<span id=\"\(hyper)\"></span>" ^
                                    strRight tx i)
            esac
          esac
        else
          case sindex ("\ntypedef " ^ hl ^ " ") tx of
          None (): tx;
          Some i:
            case sindex' ("\n  " ^ hr ^ " ") i tx of
            None (): tx;
            Some i: strLeft tx i ^ ("<span id=\"\(hyper)\"></span>" ^
                                    strRight tx i)
            esac
          esac
        fi
      esac)
    fi;

  readCode hyper tx =
    Some (
      if tx == "" or (not (strChar tx ((strLength tx) - 1) == "\n"))
      then tx ^ "\n" else tx fi |>
        strReplace "&" "&amp;" |> strReplace "<" "&lt;" |>
        putHyper hyper |> colorize);

  mkCode mpath fpath hyper =
    case db.getPaths() |> find (_ mp = mp.id == mpath) of
    p::_: readCode hyper (readAll (p.path ^/ fpath ^ ".yeti"));
    _: None ()
    esac;

{
  process rq =
    mpath = rstring rq["mpath"];
    fpath = rstring rq["fpath"];
    hyper = rstring rq["hyper"];
    cgi.ok ["page": mkCode mpath fpath hyper |> wopt wstring],
}
)
