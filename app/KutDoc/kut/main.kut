// Copyright 03-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Program start.

import "cts";
import "dm/cgi";
import "db/db";
import "db/confTb";
import "db/pathsTb";
import "data/conf";
import "pgs/pathsPg";
import "pgs/changePass";
import "pgs/indexPg";
import "pgs/modulePg";
import "pgs/codePg";

rq = sys.args()[0];

cgi.init(cts.home, 900);
db.init();

ix = str.index(rq, ":");

// CONNECTION --------------------------------------------------------------

if (ix == -1) {
  sys.print(cgi.connect(rq));
  return;
}

// AUTHENTICATION ----------------------------------------------------------

if (ix == 0) {
  key = cryp.key(cts.app, cgi.klen);
  data = cryp.decode(key, rq[1:]);
  Ps = str.split(data, ":");
  sys.print(cgi.authentication(key, Ps[0], Ps[1], Ps[2] == "1"));
  return;
}

// NORMAL DATA -------------------------------------------------------------

sessionId = rq[:ix];
ConKey = [""];
Rest = [rq[ix + 1:]];
ix2 = str.index(Rest!, ":");
if (ix2 != -1) {
  ConKey! = Rest![:ix2];
  Rest! = Rest![ix2 + 1:];
}
ComKey = cgi.getComKey(sessionId, ConKey!);
if (arr.size(ComKey) == 0) {
  sys.print(cgi.rpExpired());
} else {
  j = cryp.decode(ComKey!, Rest!);
  Data = js.ro(j);
  sys.print(processHub(Data));
}

// \m -> s
processHub = \Rq -> {
  source = js.rs(Rq.source);
  return switch (source) {
    "Main": process(Rq);
    "PathsPg": pathsPg.process(Rq);
    "ChangePass": changePass.process(Rq);
    "IndexPg": indexPg.process(Rq);
    "ModulePg": modulePg.process(Rq);
    "CodePg": codePg.process(Rq);
    default: sys.fail("Value of source (" + source + ") is not valid");
  };
};

// \m -> s
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "idata": return cgi.rp({
      "conf": confTb.readJs(),
      "paths": pathsTb.readJs()
    });
    "savePath": {
      path = js.rs(Rq.path);
      Cf = confTb.read();
      confTb.write(conf.new(path, Cf.lang, Cf.showAll));
      return cgi.rpEmpty();
    }
    "close": {
      sessionId = js.rs(Rq.sessionId);
      cgi.delSession(sessionId);
      return cgi.rpEmpty();
    }
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  };
};

