// Copyright 06-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Paths page.

import "dm/cgi";
import "db/confTb";
import "db/pathsTb";
import "data/ppath";

/// Process request.
/// \m -> s
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "changeLang": {
      Cf = confTb.read();   
      Cf.lang = Cf.lang == "es" ? "en" : "es";
      confTb.write(Cf);
      return cgi.rpEmpty();
    }
    "changeShowAll": {
      Cf = confTb.read();   
      Cf.showAll = Cf.showAll == true ? false : true;
      confTb.write(Cf);
      return cgi.rpEmpty();
    }
    "new": {
      id = js.rs(Rq.id);
      path = js.rs(Rq.path);
      Ps = pathsTb.read();
      arr.push(Ps, ppath.new(id, path, true, false));
      pathsTb.write(Ps);
      return cgi.rpEmpty();
    }
    "changeShown": {
      id = js.rs(Rq.id);
      Ps = pathsTb.read();
      for (P : Ps) 
        if (P.id == id) P.isShown = P.isShown ? false : true;;      
      pathsTb.write(Ps);
      return cgi.rpEmpty();
    }
    "delete": {
      id = js.rs(Rq.id);
      Ps = pathsTb.read();
      arr.filterIn(Ps, \P -> return P.id != id;);      
      pathsTb.write(Ps);
      return cgi.rpEmpty();      
    }
    "modify": {
      id = js.rs(Rq.id);
      newId = js.rs(Rq.newId);
      path = js.rs(Rq.path);
      Ps = pathsTb.read();
      for (P : Ps) if (P.id == id) {
        P.id = newId;
        P.path = path;
      };      
      pathsTb.write(Ps);
      return cgi.rpEmpty();      
    }
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  };
};


