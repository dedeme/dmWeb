// Copyright 21-Apr-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Approx investor model.
module data.flea.models.appr;

matrix = load data.matrix;
fmodel = load data.flea.fmodel;

(
  fcalc closes params action
  is ~double[][] ->
    array<number> ->
    (~double[] -> ~double[] -> ()) ->
    () =
  ( nDays = length closes;
    nCos = length closes[0];
    startToBuy = params[0];
    stepToBuy = params[1];
    startToSell = params[2];
    stepToSell = params[3];

    refs = matrix.mk nCos;
    toBuys = matrix.mkBoolean nCos;
    for [0..nCos - 1] do iCo:
      iDay = avoid do iDay:
                     closes[iDay][iCo] <= 0
                     done
                   [0..nDays - 1];
      refs[iCo] := closes[iDay][iCo] * (1 - startToSell);
      toBuys[iCo] := false;
      done;

    for [0..nDays - 1] do iDay:
      for [0..nCos - 1] do iCo:
        q = closes[iDay][iCo];
        ref = refs[iCo];
        if q > 0 then
          if toBuys[iCo] then
            ref = ref - (ref - q) * stepToBuy;
            if q > ref then
              refs[iCo] := q * (1 - startToSell);
              toBuys[iCo] := false
            else
              refs[iCo] := ref;
            fi
          else
            ref = ref + (q - ref) * stepToSell;
            if q < ref then
              refs[iCo] := q * (1 + startToBuy);
              toBuys[iCo] := true
            else
              refs[iCo] := ref
            fi
          fi
        fi
        done;
      action closes[iDay] refs;
      done;
  );
{
  /// Creates a model.
  mk ()
  is () -> fmodel.t =
    { id = "APPR",
      name = "Approx",
      parNames = ["Inicio C", "Paso C", "Inicio V", "Paso V"],
      parMins = array [0.05, 0.01, 0.05, 0.01],
      parMaxs = array [0.3, 0.15, 0.3, 0.15],
      parDecs = array [6, 6, 6, 6],
      fcalc
    },
})