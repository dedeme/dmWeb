// Copyright 20-Apr-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Flea models management.
module data.flea.fmodels;

load es.dm.std;

fmodel = load data.flea.fmodel;
appr = load data.flea.models.appr;
incr = load data.flea.models.incr;
mm = load data.flea.models.mm;
ga = load data.flea.models.ga;
//fll = load data.flea.models.fll;
//incrMm = load data.flea.models.incrMm;

{
  /// Returns the model list.
  list ()
  is () -> list<fmodel.t> =
    [ appr.mk (),
      incr.mk (),
      mm.mk (),
      ga.mk ()
      //fll.mk ()
      // incrMm.mk()
    ],

  /// Returns a model from its identifier.
  ///
  /// Arguments:
  ///   modelId - Model identifier.
  getModel modelId
  is string -> option<fmodel.t> =
    case find do m: m.id == modelId done (list ()) of
    md::_ : Some md;
    _ : None ()
    esac,

}