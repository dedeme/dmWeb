// Copyright 06-Jun-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Daily chart data.
module data.dailyChart;

json = load es.dm.json;
load es.dm.jsonM;

typedef accDataT =
  { stocks is number,
    price is number,
    ref is number
  };

typedef t =
  { nick is string,
    /// Last close
    close is number,
    /// From after to before.
    hours is list<number>,
    /// From after to before.
    quotes is list<number>,
    ///
    accData is list<accDataT>
  };

(
  accDataToJs d =
    json.wa
      [ json.wn d.stocks,
        json.wn d.price,
        json.wn d.ref
      ];

  accDataFromJs js =
    ( a = json.ra js |> array;
      { stocks = json.rn a[0],
        price = json.rn a[1],
        ref = json.rn a[2]
      }
    );
{
  /// Creates a new daily chart data.
  ///
  /// Arguments
  ///   nick - Nick name of a company.
  ///   close - Last close.
  ///   Hours - Daily quotes hours from after to before.
  ///   quotes - Daily quotes from after to before.
  ///   accData - Investments data.
  mk nick close hours quotes accData
  is string -> number -> list<number> -> list<number> -> list<accDataT> -> t =
    { nick, close, hours, quotes, accData },

  /// To JSON.
  ///
  /// Arguments:
  ///   data - Chart data
  toJs data
  is t -> json.t =
    json.wa
      [ json.ws data.nick,
        json.wn data.close,
        jswList json.wn data.hours,
        jswList json.wn data.quotes,
        jswList accDataToJs data.accData
      ],

  /// From JSON.
  ///
  /// Arguments:
  ///   js - Chart data JSONized.
  fromJs js
  is json.t -> t =
    a = json.ra js |> array;
    { nick = json.rs a[0],
      close = json.rn a[1],
      hours = jsrList json.rn a[2],
      quotes = jsrList json.rn a[3],
      accData = jsrList accDataFromJs a[4]
    },
})