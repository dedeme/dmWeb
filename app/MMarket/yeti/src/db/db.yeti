// Copyright 21-Apr-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Data base initializer.
module db.db;

load es.dm.std;
sys = load es.dm.sys;
file = load es.dm.file;
load std;
cts = load data.cts;
log = load db.log;
conf = load db.conf;
calendarTb = load db.calendarTb;
nicksTb = load db.nicksTb;
quotesDb = load db.quotesDb;
serversTb = load db.serversTb;
diariesDb = load db.acc.diariesDb;
profitsDb = load db.acc.profitsDb;
flog = load db.fleas.flog;
fmodels = load db.fleas.fmodels;
ranking = load db.fleas.ranking;
managersTb = load db.managersTb;
sboxTb = load db.sboxTb;
dailyTb = load db.dailyTb;
dailyChartsTb = load db.dailyChartsTb;

{
  /// Initialize data base.
  ///
  /// Arguments:
  ///   () - None.
  ///
  /// Exceptions:
  ///   MMarketException - If data version is wrong.
  init ()
  is () -> () =
      p = sys.home() ^/ cts.dataPath;
      version = p ^/ "version.txt";
      if not file.exists? p then
        file.mkdir p;
        file.mkdir (p ^/ "fleas");
        file.mkdir (p ^/ "ranking");
        file.mkdir (p ^/ "acc");
        file.mkdir (p ^/ "daily");
        file.writeAll version cts.dataVersion
      fi;

      log.init p;
      dbVersion = file.readAll version;
      if dbVersion != cts.dataVersion then
        mmFail("Application can not continue.\n" ^
               "Expected data version:\n" ^
                cts.dataVersion ^
                "\nBut found:\n" ^
                dbVersion)
      fi;

      conf.init p;
      calendarTb.init p;
      nicksTb.init p;
      quotesDb.init p;
      serversTb.init p;
      managersTb.init p;
      diariesDb.init (p ^/ "acc");
      profitsDb.init (p ^/ "acc");
      flog.init (p ^/ "fleas");
      fmodels.init (p ^/ "fleas");
      ranking.init (p ^/ "ranking");
      sboxTb.init (p ^/ "daily");
      dailyTb.init (p ^/ "daily");
      dailyChartsTb.init (p ^/ "daily"),
}

