// Copyright 22-Apr-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Comunications server.
module server.server;

sync = load es.dm.sync;
thread = load es.dm.thread;
io = load es.dm.io;
cts = load data.cts;
log = load db.log;
stopper = load data.stopper;
mainHub = load server.mainHub;

{
  /// Starts the comunications server.
  ///
  /// Arguments:
  ///   () - None.
  start ()
  is () -> () =
    try
      serverSocket = new java.net.ServerSocket(int cts.port);
      not (stopper.stop? ()) loop
        ( try
            client = serverSocket#accept();
            try
              ins = client#getInputStream();
              rq = head (io.toLines ins);

              if rq == "end" then
                stopper.doStop ();
                client#close()
              else
                _ = thread.run
                  \(
                    rp = mainHub.process rq;
                    os = client#getOutputStream();
                    io.write os rp;
                    os#flush();
                    client#close()
                  )
              fi;
            catch java.lang.Exception ex:
              e = ex;
              sync.run do lk: log.exc lk e  done;
            yrt
          catch java.lang.Exception ex:
            e = ex;
            sync.run do lk: log.exc lk e  done;
          yrt
        );
      serverSocket#close();
    catch java.lang.Exception ex:
      e = ex;
      sync.run do lk: log.exc lk e  done;
      throw ex
    yrt,
}