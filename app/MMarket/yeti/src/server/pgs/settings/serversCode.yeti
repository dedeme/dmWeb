// Copyright 12-May-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

// Servers code page.
module server.pgs.settings.serversCode;

cgi = load es.dm.cgi;
json = load es.dm.json;
load es.dm.jsonM;
sync = load es.dm.sync;
load std;
net = load net.net;
log = load db.log;

{
  /// Request process.
  ///
  /// Arguments:
  ///   ck - Comunication key.
  ///   rq - Request.
  process ck rq
  is string -> hash<string, json.t> -> string =
    case cgi.rqString rq "rq" of
    "historicTest" :
      serverId = cgi.rqNumber rq "serverId";
      nickId = cgi.rqNumber rq "nickId";
      rp = [:];
      sync.run do lk:
        try
          rp["ok"] := json.wb (net.testHistoricConf lk serverId nickId)
        catch Exception ex:
          log.exc lk ex;
          rp["ok"] := json.wb false
        yrt
        done;
      cgi.rp ck rp;
    k :
      failedKey k
    esac,
}