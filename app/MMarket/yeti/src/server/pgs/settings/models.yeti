// Copyright 04-Jun-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Investor models page.
module server.pgs.settings.models;

cgi = load es.dm.cgi;
json = load es.dm.json;
load es.dm.jsonM;
sync = load es.dm.sync;
load std;
cts = load data.cts;
fmodels = load data.flea.fmodels;
fmodel = load data.flea.fmodel;
manager = load data.manager;
managersTb = load db.managersTb;

{
  /// Request process.
  ///
  /// Arguments:
  ///   ck - Comunication key.
  ///   rq - Request.
  process ck rq
  is string -> hash<string, json.t> -> string =
    case cgi.rqString rq "rq" of
    "idata" :
      investor = cgi.rqNumber rq "investor";
      rp = [:];
      sync.run do lk:
        rp["investors"] := json.wn cts.managers;
        rp["models"] := jswList fmodel.toJs (fmodels.list ());
        managersTb.regularize lk investor;
        rp["manager"] := (managersTb.read lk)[investor] |> manager.toJsClient
        done;
      cgi.rp ck rp;
    "update" :
      investor = cgi.rqNumber rq "investor";
      nickName = cgi.rqString rq "nickName";
      modelId = cgi.rqString rq "modelId";
      params = jsrList json.rn rq["params"] |> array;
      case fmodels.getModel modelId of
      Some model :
        sync.run do lk:
          if nickName == "" then managersTb.setBase lk investor model params
          else managersTb.setNick lk investor nickName model params fi
          done;
      None () :
        ()
      esac;
      cgi.rpEmpty ck;
    k :
      failedKey k
    esac,
}