// Copyright 27-May-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Data base of flea ranking.
///
/// Description:
///   Data basde has two tables:
///   : pool: With the historic bests 'cts.poolNumber' investors.
///   : ranking: With 40 'hits'.
module db.fleas.ranking;

load es.dm.std;
sync = load es.dm.sync;
file = load es.dm.file;
json = load es.dm.json;
load es.dm.jsonM;
irank = load data.flea.irank;

(
  var rankingPath = "";

{
  /// Initializes data base.
  /// Arguments:
  ///   parent - Parent directory.
  init parent
  is string -> () =
    rankingPath := parent ^/ "Ranking.tb";
    if not file.exists? rankingPath then
      file.writeAll rankingPath "[]"
    fi,

  /// Writes an investors ranking.
  ///
  /// Arguments:
  ///   lk - Synchronization lock.
  ///   iranks - investors rankings (sorted from after to before).
  writeRanking lk iranks
  is sync.t -> list<irank.t> -> () =
    file.writeAll rankingPath (jswList irank.toJs iranks |> json.toStr),

  /// Reads investors rankings (sorted from after to before).
  ///
  /// Arguments:
  ///   lk - Synchronization lock.
  readRanking lk
  is sync.t -> list<irank.t> =
    file.readAll rankingPath |> json.fromStr |> jsrList irank.fromJs,

})
