// Copyright 22-Apr-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Configuration table.
module db.conf;

load es.dm.std;
sync = load es.dm.sync;
file = load es.dm.file;
json = load es.dm.json;
cts = load data.cts;
act = load data.activity;

(
  var path = "";

  langKey = "lang";
  activityKey = "activity";

  write lk cf = json.wo cf |> json.toStr |> file.writeAll path;

  read () = file.readAll path |> json.fromStr |> json.ro;

  getField key =
    ( cf = read ();
      cf[key]
    );

  setField lk key js =
    ( cf = read ();
      cf[key] := js;
      write lk cf
    );

{
  /// Initializes configuration table.
  ///
  /// Arguments:
  ///   parent - Parent directory.
  init parent
  is string -> () =
    path := parent ^/ "Conf.tb";
    if not file.exists? path
    then
      sync.run do lk:
        write lk
          [ langKey: json.ws "es",
            activityKey: act.mk cts.actSleeping2 |> act.toJs
          ];
        done
    fi,

  /// Gets web language.
  ///
  /// Arguments:
  ///   () - None.
  lang ()
  is () -> string =
    getField langKey |> json.rs,

  /// Sets web language.
  ///
  /// Arguments:
  ///   lk - Synchronization lock.
  ///   lang - 'es' or 'en'.
  setLang lk lang
  is sync.t -> string -> () =
    json.ws lang |> setField lk langKey,

  /// Gets current activity.
  ///
  /// Arguments:
  ///   () - None.
  activity ()
  is () -> act.t =
    getField activityKey |> act.fromJs,

  /// Sets current activity.
  ///
  /// Arguments:
  ///   lk - Synchronization lock.
  ///   activity - Current activity.
  setActivity lk activity
  is sync.t -> act.t -> () =
    act.toJs activity |> setField lk activityKey,

})