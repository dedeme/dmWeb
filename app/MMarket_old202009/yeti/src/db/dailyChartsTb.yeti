// Copyright 06-Jun-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Daily charts data table.
module db.dailyChartsTb;

load es.dm.std;
sync = load es.dm.sync;
file = load es.dm.file;
json = load es.dm.json;
load es.dm.jsonM;
dailyChart = load data.dailyChart;

(
  var path = "";


{
  /// Initializes configuration table.
  ///
  /// Arguments:
  ///   parent - Parent directory.
  init parent
  is string -> () =
    path := parent ^/ "DailyChart.tb";
    if not file.exists? path then
      file.writeAll path "[]";
    fi,

  /// Returns daily charts data in JSON format.
  ///
  /// Arguments:
  ///   lk - Synchronization lock.
  readJs lk
  is sync.t -> json.t =
    file.readAll path |> json.fromStr,

  /// Returns daily charts data.
  ///
  /// Arguments:
  ///   lk - Synchronization lock.
  read lk
  is sync.t -> list<dailyChart.t> =
    readJs lk |> jsrList dailyChart.fromJs,

  /// Write daily chart data.
  ///
  /// Arguments:
  ///   lk - Synchronization lock.
  ///   data - daily charts data.
  write lk data
  is sync.t -> list<dailyChart.t> -> () =
    jswList dailyChart.toJs data |> json.toStr |> file.writeAll path,

})
