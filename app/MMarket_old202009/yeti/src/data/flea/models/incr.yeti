// Copyright 28-May-2020 ºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Increment investor model.
module data.flea.models.incr;

matrix = load data.matrix;
fmodel = load data.flea.fmodel;

(
  fcalc closes params action
  is ~double[][] ->
    array<number> ->
    (~double[] -> ~double[] -> ()) ->
    () =
  ( nDays = length closes;
    nCos = length closes[0];
    days = int params[0];
    stripToBuy = params[1];
    stripToSell = params[2];

    refs = matrix.mk nCos; // Base references
    refs' = matrix.mk nCos; // References for sending to action
    toBuys = matrix.mkBoolean nCos;
    for [0..nCos - 1] do iCo:
      iDay = avoid do iDay:
                      closes[iDay][iCo] <= 0
                      done [0..nDays - 1];
      refs[iCo] := closes[iDay][iCo];
      toBuys[iCo] := false;
      done;

    for [0..nDays - 1] do iDay:
      for [0..nCos - 1] do iCo:
        if iDay < days then
          refs'[iCo] := (-1);
        else
          q = closes[iDay][iCo];
          ref = refs[iCo];
          if q >= 0 then
            newRef = closes[iDay - days][iCo];
            newRef = if newRef >= 0 then newRef else ref fi;
            if toBuys[iCo] then
              ref = if newRef < ref then newRef else ref fi;
              ref' = ref * (1 + stripToBuy);
              refs[iCo] := ref;
              refs'[iCo] := ref';
              if q > ref' then
                toBuys[iCo] := false;
                refs'[iCo] := ref * (1 - stripToSell)
              fi
            else
              ref = if newRef > ref then newRef else ref fi;
              ref' = ref * (1 - stripToSell);
              refs[iCo] := ref;
              refs'[iCo] := ref';
              if q < ref' then
                toBuys[iCo] := true;
                refs'[iCo] := ref * (1 + stripToBuy)
              fi
            fi
          fi
        fi
        done;
      action closes[iDay] refs';
      done;
  );
{
  /// Creates a model.
  mk ()
  is () -> fmodel.t =
    { id = "INCR",
      name = "Increment",
      parNames = ["Días", "Banda C", "Banda V"],
      parMins = array [20, 0.0001, 0.0001],
      parMaxs = array [120, 0.25, 0.25],
      parDecs = array [0, 6, 6],
      fcalc
    },
})