// Copyright 21-Apr-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Application entry.
module MMarket;

io = load es.dm.io;
sys = load es.dm.sys;
sync = load es.dm.sync;
cgi = load es.dm.cgi;
thread = load es.dm.thread;
cts = load data.cts;
db = load db.db;
log = load db.log;
conf = load db.conf;
server = load server.server;
scheduler = load scheduler.scheduler;

help ()
is () -> () =
  println "Usage: MMarket [start | stop | test | help]";

test ()
is () -> boolean =
  try
    socket = new java.net.Socket("localhost" as ~String, int cts.port);
    socket#close();
    true
  catch java.lang.Exception ex:
    false
  yrt;

main arg
is string -> () =
  ( sys.init cts.appName;
    cgi.init cts.appName (sys.home ()) cts.expiration "MMarket third time";
    db.init ();

    case arg of
    "start" :
      sync.run do lk: log.info lk "MMarket started" done;

      svThread = thread.run \(server.start ());

      activity = scheduler.initialActivity (conf.activity ());
      shThread = thread.run \(scheduler.run activity);

      thread.join shThread;
      thread.join svThread;
      sync.run do lk: log.info lk "MMarket stoped" done;
    "stop" :
      try
        socket = new java.net.Socket("localhost" as ~String, int cts.port);
        os = socket#getOutputStream();
        io.write os "end";
        io.oclose os;
        socket#close();
      catch java.lang.Exception ex:
      yrt;
    "test" :
      if test() then println "MMarket is active"
      else println "MMarket is stopped"
      fi;
    _ :
      help ()
    esac
  );

class Main
  static void main(String[] args)
    if length args == 1 then main (string args[0])
    else help ()
    fi,
end;
