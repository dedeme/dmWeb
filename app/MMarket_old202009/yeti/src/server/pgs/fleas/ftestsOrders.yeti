// Copyright 26-May-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Fleas tests orders page.
module server.pgs.fleas.ftestsOrders;

load es.dm.std;
cgi = load es.dm.cgi;
json = load es.dm.json;
load es.dm.jsonM;
sync = load es.dm.sync;
load std;
quotesDb = load db.quotesDb;
log = load db.log;
qtable = load data.qtable;
fmodel = load data.flea.fmodel;
fmodels = load data.flea.fmodels;

{
  /// Request process.
  ///
  /// Arguments:
  ///   ck - Comunication key.
  ///   rq - Request.
  process ck rq
  is string -> hash<string, json.t> -> string =
    case cgi.rqString rq "rq" of
    "ordersData" :
      modelId = cgi.rqString rq "modelId";
      params = jsrList json.rn rq["params"] |> array;
      rp = [:];
      sync.run do lk:
        dates = quotesDb.dates lk;
        opens = quotesDb.opens lk;
        closes = quotesDb.closes lk;

        case fmodels.getModel modelId of
          Some md :
            rp["nicks"] := jswList json.ws (list opens.nicks);
            rp["lastCloses"] := jswList json.wn
              ([0..length closes.nicks - 1] |>
                map do i: qtable.lastRowOk closes.values i done);
            rp["assets"] := fmodel.assetsRsToJs
                              (fmodel.assets md opens closes params);
            rp["orders"] := jswList fmodel.orderToJs
                              (fmodel.orders md dates opens closes params);
            rp["ok"] := json.wb true;
          None () :
            log.error lk "Model \(modelId) not found";
            rp["ok"] := json.wb false
          esac
        done;
      cgi.rp ck rp;
    k:
      failedKey k
    esac,
}
