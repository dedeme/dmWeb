// Copyright 25-Nov-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

"../dm/wg" import
"../dm/client" import
"../dm/location" import
"../pcode" import

( @+msss:: link =; lpath =; lib =; Pg =
  Pg
  "link" link int,fromStr map,put+
  "lib" lib map,put+
  "lpath" lpath map,put+

  "title" "div" ui,$+ map,put+
  "body" "div" ui,$+ map,put+
  "tdLeft" "td" { class: "prel", style: "width:10px" } ui,$+ map,put+
  "tdRight" "td" { class: "prer" } ui,$+ map,put+
@-m) new =>

( @+m:: Pg =
  "@title" { text: (Pg .lpath path,name ".dms - " APP + +) } ui,$
  Pg .view { removeAll } [
    (Pg .title) {} [
      "table" {} [ "tr" {} [
        "td" { class: "frame" } [
          "a" {
            att: href ((location,hrefBase "/?" Pg .lib "@" Pg .lpath) ++)
            text: (Pg .lpath)
          }]]]]
    "br" {} []
    (Pg .body) {} [
      "table" {
        style: "width:100%"
        att: cellspacing "0"
      } [
        "tr" {} [ (Pg .tdLeft) [] {} (Pg .tdRight) ]]]
    ("up" wg,upTop)
  ]

  ui,$
  Pg this,update.
@-) show =>

( @+ms:: code =; Pg =
  lst,new : SLefts =
  lst,new : SRights =
  pcode,CODE wrap,ref : St =
  "`" wrap,ref : Interpolation =

  code "\n" str,split
  ( 1 + i =; l =

    SLefts
      i Pg .link == ("<span id='hp'></span>") ("") elif
      i toStr + lst,push

    SRights : St Interpolation l pcode,processLine : lst,push
  )
  lst,eachIx

  Pg .tdLeft { html: (SLefts "<br>" str,join) } ui,$
  Pg .tdRight { html: (SRights "<br>" str,join) } ui,$
@-) setPage. =>

// Control ---------------------------------------------------------------------

( @+m:: Pg# =
  Pg# .client
  {
    "page": "code" js,ws
    "id": Pg# .lib js,ws
    "lpath": Pg# .lpath js,ws
  } map,from
  ( .code : rp =
    rp js,null?
    ( location,hrefBase "?@" + : location,assign)
    (
      rp : js,rs : code =
      Pg# code this,setPage.
      Pg# .link 0 !=
      ( "#hp" ui,$+ (e, "e.scrollIntoView()") ffi,v)
      if
    )
    elif
  )
  client,send
@-) update. =>
