// Copyright 14-Nov-2019 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

"../dm/cgi" import
"../io" import
"../../www/dms/common/conf" import
"../../www/dms/common/libs" import

( @m Rq =
  Rq "rq" map,has? ! ("Field 'rq' is missing" fail) if
  Rq .rq js,rs : rq =

  ( "setLang" rq ==)
  (
    io,readConf conf,fromJs : "lang" : Rq .lang js,rs : map,put+
    conf,toJs io,writeConf
    cgi,none
  )
  else
  ( "chpass" rq ==)
  ( Rq .user js,rs : Rq .pass js,rs : Rq .newPass js,rs : cgi,changePass)
  else
  ( "setShowAll" rq ==)
  (
    io,readConf conf,fromJs : "showAll?" : Rq .showAll? js,rb : map,put+
    conf,toJs io,writeConf
    cgi,none
  )
  else
  ( "addPath" rq ==)
  (
    Rq .id js,rs : id =
    Rq .path js,rs : lpath =
    io,readLibs libs,fromJs dup id lpath 1 libs,add libs,toJs : ljs =
    ljs io,writeLibs
    { "libs": ljs } map,from cgi,ok
  )
  else
  ( "showPath" rq ==)
  (
    Rq .id js,rs : id =
    io,readLibs libs,fromJs dup
    ( L =
      L libs,ID get : id == (L libs,SHOW? (!) up) if
    ) lst,each
    libs,toJs io,writeLibs
    cgi,none
  )
  else
  ( "del" rq ==)
  (
    Rq .id js,rs : id =
    io,readLibs libs,fromJs dup id libs,remove libs,toJs io,writeLibs
    cgi,none
  )
  else
  ( "modify" rq ==)
  (
    Rq .id js,rs : id =
    Rq .newId js,rs : newId =
    Rq .dpath js,rs : dpath =
    Rq .show? js,rb : show? =
    io,readLibs libs,fromJs
      dup id newId dpath show? libs,modify
      libs,toJs io,writeLibs
    cgi,none
  )
  else
  ( "Value '" rq "' not allowed for 'rq'" + + fail)
  if
@s) process =>
// OBJ<Js>
